using System;
using System.Collections.Generic;
using System.Linq;
using UntestableLibrary;

namespace MyLibrary.Mixins.UntestableLibrary
{
    public static class ULTableMixin
    {
        public static IEnumerable<ULColumn> GetAutoGeneratedColumns(this ULTable @this)
        {
            if (@this == null)
                throw new ArgumentNullException("@this");

            var patterns = GetAutoGeneratedColumnNamePatterns(@this.TableName);
            return @this.Columns.OfType<ULColumn>().Where(column => patterns.Any(_ => _(column.Name)));
        }

        public static IEnumerable<ULColumn> GetManuallyGeneratedColumns(this ULTable @this)
        {
            if (@this == null)
                throw new ArgumentNullException("@this");

            var patterns = GetAutoGeneratedColumnNamePatterns(@this.TableName);
            return @this.Columns.OfType<ULColumn>().Where(column => !patterns.Any(_ => _(column.Name)));
        }

        static readonly Func<string, string, bool> ColumnNameEquals = (x, y) => string.Equals(x, y, StringComparison.InvariantCultureIgnoreCase);

        static Func<string, bool>[] GetAutoGeneratedColumnNamePatterns(string tableName)
        {
            return new Func<string, bool>[] 
            { 
                columnName => ColumnNameEquals(tableName + "_ID", columnName), 
                columnName => ColumnNameEquals("DELETED", columnName), 
                columnName => ColumnNameEquals("CREATED", columnName), 
                columnName => ColumnNameEquals("MODIFIED", columnName), 
            };
        }
    }
}
